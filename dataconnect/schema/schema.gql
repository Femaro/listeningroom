# Example schema for simple movie review app

# User table is keyed by Firebase Auth UID.
type User @table @auth(
  rules: [
    { operations: [read], allow: "authenticated" },
    { operations: [create, update, delete], allow: "owner", ownerField: "id" }
  ]
) {
  id: String! @default(expr: "auth.uid")
  username: String! @col(dataType: "varchar(50)")
}

# Movie is keyed by a randomly generated UUID.
type Movie @table @auth(
  rules: [
    { operations: [read], allow: "public" },
    { operations: [create, update, delete], allow: "authenticated" }
  ]
) {
  title: String!
  imageUrl: String!
  genre: String
}

# MovieMetadata is a metadata attached to a Movie.
type MovieMetadata @table @auth(
  rules: [
    { operations: [read], allow: "public" },
    { operations: [create, update, delete], allow: "authenticated" }
  ]
) {
  movie: Movie! @unique
  rating: Float
  releaseYear: Int
  description: String
}

# Reviews is a join table between User and Movie.
type Review @table(name: "Reviews", key: ["movie", "user"]) @auth(
  rules: [
    { operations: [read], allow: "public" },
    { operations: [create], allow: "authenticated" },
    { operations: [update, delete], allow: "owner", ownerField: "user" }
  ]
) {
  user: User!
  movie: Movie!
  rating: Int
  reviewText: String
  reviewDate: Date! @default(expr: "request.time")
}